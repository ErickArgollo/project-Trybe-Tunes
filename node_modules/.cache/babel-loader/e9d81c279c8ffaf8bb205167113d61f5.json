{"ast":null,"code":"var _jsxFileName = \"/home/erick/Documentos/Projetos github/project-Trybe-Tunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport './style/Album.css';\nimport HeaderMobile from '../components/HeaderMobile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      listOfSongs: '',\n      isLoading: true,\n      showHeader: false\n    };\n\n    this.songRequest = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const songs = await getMusics(id);\n      this.setState({\n        listOfSongs: songs,\n        isLoading: false\n      });\n    };\n\n    this.updateFavoriteInfos = async () => {\n      await getFavoriteSongs();\n    };\n\n    this.toggleMenu = () => {\n      const {\n        showHeader\n      } = this.state;\n\n      if (showHeader) {\n        this.setState({\n          showHeader: false\n        });\n      } else {\n        this.setState({\n          showHeader: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.songRequest();\n  }\n\n  render() {\n    const {\n      listOfSongs,\n      isLoading,\n      showHeader\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      className: \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), showHeader && /*#__PURE__*/_jsxDEV(HeaderMobile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-icons burguer-album\",\n        onClick: this.toggleMenu,\n        children: \"menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-album-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-infos-container\",\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-img-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: listOfSongs[0].artworkUrl100,\n              alt: \"img\",\n              className: \"album-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"album-song-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": \"artist-name\",\n                className: \"artist-name\",\n                children: listOfSongs[0].artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                \"data-testid\": \"album-name\",\n                className: \"album-name\",\n                children: listOfSongs[0].collectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-list-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-list\",\n              children: !isLoading && listOfSongs.map((e, index) => {\n                if (index !== 0) {\n                  return /*#__PURE__*/_jsxDEV(MusicCard, {\n                    song: e,\n                    update: this.updateFavoriteInfos\n                  }, e.trackId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 31\n                  }, this);\n                }\n\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  }).isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","Header","getMusics","MusicCard","getFavoriteSongs","HeaderMobile","Album","state","listOfSongs","isLoading","showHeader","songRequest","match","params","id","props","songs","setState","updateFavoriteInfos","toggleMenu","componentDidMount","render","artworkUrl100","artistName","collectionName","map","e","index","trackId","propTypes","shape","string","isRequired"],"sources":["/home/erick/Documentos/Projetos github/project-Trybe-Tunes/src/pages/Album.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport './style/Album.css';\nimport HeaderMobile from '../components/HeaderMobile';\n\nexport default class Album extends Component {\n  state = {\n    listOfSongs: '',\n    isLoading: true,\n    showHeader: false,\n  };\n\n  componentDidMount() {\n    this.songRequest();\n  }\n\n  songRequest = async () => {\n    const { match: { params: { id } } } = this.props;\n    const songs = await getMusics(id);\n    this.setState({ listOfSongs: songs, isLoading: false });\n  };\n\n  updateFavoriteInfos = async () => {\n    await getFavoriteSongs();\n  };\n\n  toggleMenu = () => {\n    const { showHeader } = this.state;\n    if (showHeader) {\n      this.setState({ showHeader: false });\n    } else {\n      this.setState({ showHeader: true });\n    }\n  };\n\n  render() {\n    const { listOfSongs, isLoading, showHeader } = this.state;\n    return (\n      <div data-testid=\"page-album\" className=\"page-album\">\n        <Header />\n        {\n          showHeader && <HeaderMobile />\n        }\n\n        <span\n          className=\"material-icons burguer-album\"\n          onClick={ this.toggleMenu }\n        >\n\n          menu\n        </span>\n        <div className=\"page-album-container\">\n          <div className=\"album-infos-container\">\n            {\n              !isLoading && (\n                <div className=\"title-img-container\">\n                  <img\n                    src={ listOfSongs[0].artworkUrl100 }\n                    alt=\"img\"\n                    className=\"album-img\"\n                  />\n                  <div className=\"album-song-text\">\n                    <p\n                      data-testid=\"artist-name\"\n                      className=\"artist-name\"\n                    >\n                      {listOfSongs[0].artistName}\n\n                    </p>\n                    <p\n                      data-testid=\"album-name\"\n                      className=\"album-name\"\n                    >\n                      {listOfSongs[0].collectionName}\n\n                    </p>\n                  </div>\n                </div>)\n            }\n            <div className=\"song-list-container\">\n              <div className=\"song-list\">\n                {\n                  !isLoading && listOfSongs.map((e, index) => {\n                    if (index !== 0) {\n                      return (<MusicCard\n                        key={ e.trackId }\n                        song={ e }\n                        update={ this.updateFavoriteInfos }\n                      />);\n                    }\n                    return null;\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}